zone-ingresses:
  routes:
    item:
      title: Zone Ingress
      breadcrumbs: Zone Ingresses
    items:
      title: Zone Ingresses
      breadcrumbs: Zone Ingresses
zone-egresses:
  routes:
    item:
      title: Zone Egress
      breadcrumbs: Zone Egresses
    items:
      title: Zone Egresses
      breadcrumbs: Zone Egresses
zones:
  routes:
    create:
      title: 'Create & connect Zone'
    items:
      navigation:
        zone-cp-list-view: Zone CPs
        zone-ingress-list-view: Zone Ingresses
        zone-egress-list-view: Zone Egresses
  form:
    exit: 'Exit'
    nameLabel: 'Name'
    createZoneButtonLabel: 'Create Zone & generate token'
    environmentLabel: 'Environment'
    universalLabel: 'Universal'
    kubernetesLabel: 'Kubernetes'
    zoneIngressLabel: 'Zone Ingress'
    zoneIngressEnabledLabel: 'Enabled'
    zoneEgressLabel: 'Zone Egress'
    zoneEgressEnabledLabel: 'Enabled'
    connectZone: 'Connect Zone'
    scan:
      waitTitle: 'Waiting for Zone to be connected …'
      completeTitle: 'Done!'
      completeDescription: 'The Zone “{name}” is now connected.'
      completeButtonLabel: 'Go to Zone “{name}”'
      errorTitle: 'Could not connect Zone'
      errorDescription: 'We were unable to connect Zone.'
    universal:
      copySaveToken:
        title: 'Copy and save token'
        alertMessage: 'You won’t see the token again! Make sure to save it somewhere now.'
      connectZone:
        title: 'Connect Zone'
        description1: 'Copy and paste the following configuration into the config.yaml on your local machine.'
        fileName: 'config.yaml'
        config: |
          environment: universal
          mode: zone
          multizone:
            zone:
              name: {zoneName}
              globalAddress: {globalKdsAddress}
          experimental:
            kdsDeltaEnabled: true
        command: 'kuma-cp run -c config.yaml'
        description2: 'Next, run the following command to connect the Zone.'
    kubernetes:
      prerequisites:
        title: 'Prerequisites'
        step1Label: 'Kubernetes cluster'
        step1LabelAddendum: 'with load balancer'
        step1Description: '{productName} is compatible with all distributions of Kubernetes, including Minikube, AKS, EKS, GKE and OpenShift.'
        step2Label: 'kubectl or oc access'
        step2Description: 'You have kubectl or oc (if working with OpenShift) installed and configured to communicate to your Kubernetes cluster.'
        step3LinkTitle: 'Helm 3'
        step3Tail: 'is installed.'
      helm:
        title: 'Set-up Helm'
        description: 'On your local machine, create a namespace in your Kubernetes cluster and pull down the Helm repo.'
        step1Description: 'Create a namespace'
        step1Command: 'kubectl create namespace kuma-system'
        step2Description: 'Add the charts repository'
        step2Command: 'helm repo add kuma https://kumahq.github.io/charts'
        step3Description: 'Update Helm'
        step3Command: 'helm repo update'
      secret:
        title: 'Set-up secret'
        description1: 'This is your token.'
        description2: 'Add it as a Kubernetes secret.'
        command: |
          echo "
            apiVersion: v1
            kind: Secret
            metadata:
              name: cp-token
              namespace: kuma-system
            type: Opaque
            data:
              token: {token}
          " | kubectl apply -f -
      connectZone:
        title: 'Connect Zone'
        description1: 'Copy and paste the following configuration into the Helm chart values.yaml on your local machine.'
        fileName: 'values.yaml'
        config: |
          controlPlane:
            mode: zone
            zone: {zoneName}
            kdsGlobalAddress: {globalKdsAddress}
            secrets:
              - Env: KUMA_MULTIZONE_ZONE_KDS_AUTH_CP_TOKEN_INLINE
                Secret: cp-token
                Key: token
          ingress:
            enabled: {zoneIngressEnabled}
          egress:
            enabled: {zoneEgressEnabled}
          experimental:
            deltaKds: true
        description2: 'Next, run the following command to connect the Zone.'
        command: 'helm install -n kuma-system -f values.yaml kuma kuma/kuma'
  create:
    errorTitle: 'Could not create the Zone'
  delete:
    confirmModal:
      text1: 'Are you sure you want to delete the Zone {zoneName}?'
      text2: 'This action cannot be reversed.'
      proceedText: 'Yes, delete'
      title: 'Delete Zone'
      errorText: 'An unexpected error occurred'
zone-cps:
  routes:
    item:
      title: Zone CP
      breadcrumbs: Zone CPs
    items:
      title: Zone CPs
      breadcrumbs: Zone CPs
