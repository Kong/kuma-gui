/* eslint-disable */
import { Selector } from "./selector";

export const protobufPackage = "kuma.mesh.v1alpha1";

/** ProxyTemplate defines the desired state of ProxyTemplate */
export interface ProxyTemplate {
  /** List of Dataplane selectors. */
  selectors: Selector[];
  /** Configuration for ProxyTemplate */
  conf: ProxyTemplate_Conf | undefined;
}

export interface ProxyTemplate_Conf {
  /**
   * List of imported profiles.
   * +optional
   */
  imports: string[];
  /**
   * List of raw xDS resources.
   * +optional
   */
  resources: ProxyTemplateRawResource[];
  /** List of config modifications */
  modifications: ProxyTemplate_Modifications[];
}

/** Modifications to xDS config generated by Proxy Template */
export interface ProxyTemplate_Modifications {
  /** Cluster modification */
  cluster?:
    | ProxyTemplate_Modifications_Cluster
    | undefined;
  /** Listener modification */
  listener?:
    | ProxyTemplate_Modifications_Listener
    | undefined;
  /** Network Filter modification */
  networkFilter?:
    | ProxyTemplate_Modifications_NetworkFilter
    | undefined;
  /** HTTP Filter modification */
  httpFilter?:
    | ProxyTemplate_Modifications_HttpFilter
    | undefined;
  /** Virtual Host modifications */
  virtualHost?: ProxyTemplate_Modifications_VirtualHost | undefined;
}

/** Cluster defines modifications to generated clusters */
export interface ProxyTemplate_Modifications_Cluster {
  /** Only clusters that match will be modified */
  match:
    | ProxyTemplate_Modifications_Cluster_Match
    | undefined;
  /** Operation to apply on a cluster (add, remove, patch) */
  operation: string;
  /** xDS cluster */
  value: string;
}

/** Match defines match for cluster */
export interface ProxyTemplate_Modifications_Cluster_Match {
  /**
   * Origin of the resource generation. (inbound, outbound, prometheus,
   * transparent, ingress)
   */
  origin: string;
  /** Name of the cluster to match */
  name: string;
}

/** Listener defines modification to generated listeners */
export interface ProxyTemplate_Modifications_Listener {
  /** Only listeners that match will be modified */
  match:
    | ProxyTemplate_Modifications_Listener_Match
    | undefined;
  /** Operation to apply on a listener (add, remove, patch) */
  operation: string;
  /** xDS listener */
  value: string;
}

/** Match defines match for listener */
export interface ProxyTemplate_Modifications_Listener_Match {
  /**
   * Origin of the resource generation. (inbound, outbound, prometheus,
   * transparent, ingress)
   */
  origin: string;
  /** Name of the listener to match */
  name: string;
  /** Tags available in Listener#Metadata#FilterMetadata[io.kuma.tags] */
  tags: { [key: string]: string };
}

export interface ProxyTemplate_Modifications_Listener_Match_TagsEntry {
  key: string;
  value: string;
}

/** Listener defines modification to generated network filters */
export interface ProxyTemplate_Modifications_NetworkFilter {
  /** Only network filters that match will be modified */
  match:
    | ProxyTemplate_Modifications_NetworkFilter_Match
    | undefined;
  /**
   * Operation to apply on network filter (addFirst, addLast, addBefore,
   * addAfter, remove, patch)
   */
  operation: string;
  /** xDS network filter */
  value: string;
}

/** Match defines match for network filter */
export interface ProxyTemplate_Modifications_NetworkFilter_Match {
  /**
   * Origin of the resource generation. (inbound, outbound, prometheus,
   * transparent, ingress)
   */
  origin: string;
  /** Name of the network filter */
  name: string;
  /**
   * Name of the listener that network filter modifications will be
   * applied to
   */
  listenerName: string;
  /**
   * ListenerTags available in
   * Listener#Metadata#FilterMetadata[io.kuma.tags]
   */
  listenerTags: { [key: string]: string };
}

export interface ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry {
  key: string;
  value: string;
}

/** HttpFilter defines modifications to generated HTTP filters */
export interface ProxyTemplate_Modifications_HttpFilter {
  /** Only HTTP filters that match will be modified */
  match:
    | ProxyTemplate_Modifications_HttpFilter_Match
    | undefined;
  /**
   * Operation to apply on network filter (addFirst, addLast, addBefore,
   * addAfter, remove, patch)
   */
  operation: string;
  /** xDS HTTP filter */
  value: string;
}

/** Match defines match for http filter */
export interface ProxyTemplate_Modifications_HttpFilter_Match {
  /**
   * Origin of the resource generation. (inbound, outbound, prometheus,
   * transparent, ingress)
   */
  origin: string;
  /** Name of the network filter */
  name: string;
  /**
   * Name of the listener that http filter modifications will be applied
   * to
   */
  listenerName: string;
  /**
   * ListenerTags available in
   * Listener#Metadata#FilterMetadata[io.kuma.tags]
   */
  listenerTags: { [key: string]: string };
}

export interface ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry {
  key: string;
  value: string;
}

/** VirtualHost defines modification to generated virtual hosts */
export interface ProxyTemplate_Modifications_VirtualHost {
  /** Only virtual hosts that match will be modified */
  match:
    | ProxyTemplate_Modifications_VirtualHost_Match
    | undefined;
  /** Operation to apply on a virtual hosts (add, remove, patch) */
  operation: string;
  /** xDS virtual host */
  value: string;
}

/** Match defines match for virtual host */
export interface ProxyTemplate_Modifications_VirtualHost_Match {
  /**
   * Origin of the resource generation. (inbound, outbound, prometheus,
   * transparent, ingress)
   */
  origin: string;
  /** Name of the virtual host to match */
  name: string;
  /** Name of the route configuration */
  routeConfigurationName: string;
}

export interface ProxyTemplateSource {
  /**
   * Name of a configuration source.
   * +optional
   */
  name: string;
  /**
   * Profile, e.g. `default-proxy`.
   * +optional
   */
  profile?:
    | ProxyTemplateProfileSource
    | undefined;
  /**
   * Raw xDS resources.
   * +optional
   */
  raw?: ProxyTemplateRawSource | undefined;
}

export interface ProxyTemplateProfileSource {
  /** Profile name. */
  name: string;
  /**
   * Profile params if any.
   * +optional
   */
  params: { [key: string]: string };
}

export interface ProxyTemplateProfileSource_ParamsEntry {
  key: string;
  value: string;
}

export interface ProxyTemplateRawSource {
  /**
   * List of raw xDS resources.
   * +optional
   */
  resources: ProxyTemplateRawResource[];
}

export interface ProxyTemplateRawResource {
  /**
   * The resource's name, to distinguish it from others of the same type of
   * resource.
   */
  name: string;
  /**
   * The resource level version. It allows xDS to track the state of individual
   * resources.
   */
  version: string;
  /** xDS resource. */
  resource: string;
}

function createBaseProxyTemplate(): ProxyTemplate {
  return { selectors: [], conf: undefined };
}

export const ProxyTemplate = {
  fromJSON(object: any): ProxyTemplate {
    return {
      selectors: Array.isArray(object?.selectors) ? object.selectors.map((e: any) => Selector.fromJSON(e)) : [],
      conf: isSet(object.conf) ? ProxyTemplate_Conf.fromJSON(object.conf) : undefined,
    };
  },

  toJSON(message: ProxyTemplate): unknown {
    const obj: any = {};
    if (message.selectors) {
      obj.selectors = message.selectors.map((e) => e ? Selector.toJSON(e) : undefined);
    } else {
      obj.selectors = [];
    }
    message.conf !== undefined && (obj.conf = message.conf ? ProxyTemplate_Conf.toJSON(message.conf) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate>): ProxyTemplate {
    const message = Object.create(createBaseProxyTemplate()) as ProxyTemplate;
    message.selectors = object.selectors?.map((e) => Selector.fromPartial(e)) || [];
    message.conf = (object.conf !== undefined && object.conf !== null)
      ? ProxyTemplate_Conf.fromPartial(object.conf)
      : undefined;
    return message;
  },
};

function createBaseProxyTemplate_Conf(): ProxyTemplate_Conf {
  return { imports: [], resources: [], modifications: [] };
}

export const ProxyTemplate_Conf = {
  fromJSON(object: any): ProxyTemplate_Conf {
    return {
      imports: Array.isArray(object?.imports) ? object.imports.map((e: any) => String(e)) : [],
      resources: Array.isArray(object?.resources)
        ? object.resources.map((e: any) => ProxyTemplateRawResource.fromJSON(e))
        : [],
      modifications: Array.isArray(object?.modifications)
        ? object.modifications.map((e: any) => ProxyTemplate_Modifications.fromJSON(e))
        : [],
    };
  },

  toJSON(message: ProxyTemplate_Conf): unknown {
    const obj: any = {};
    if (message.imports) {
      obj.imports = message.imports.map((e) => e);
    } else {
      obj.imports = [];
    }
    if (message.resources) {
      obj.resources = message.resources.map((e) => e ? ProxyTemplateRawResource.toJSON(e) : undefined);
    } else {
      obj.resources = [];
    }
    if (message.modifications) {
      obj.modifications = message.modifications.map((e) => e ? ProxyTemplate_Modifications.toJSON(e) : undefined);
    } else {
      obj.modifications = [];
    }
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate_Conf>): ProxyTemplate_Conf {
    const message = Object.create(createBaseProxyTemplate_Conf()) as ProxyTemplate_Conf;
    message.imports = object.imports?.map((e) => e) || [];
    message.resources = object.resources?.map((e) => ProxyTemplateRawResource.fromPartial(e)) || [];
    message.modifications = object.modifications?.map((e) => ProxyTemplate_Modifications.fromPartial(e)) || [];
    return message;
  },
};

function createBaseProxyTemplate_Modifications(): ProxyTemplate_Modifications {
  return {};
}

export const ProxyTemplate_Modifications = {
  fromJSON(object: any): ProxyTemplate_Modifications {
    return {
      cluster: isSet(object.cluster) ? ProxyTemplate_Modifications_Cluster.fromJSON(object.cluster) : undefined,
      listener: isSet(object.listener) ? ProxyTemplate_Modifications_Listener.fromJSON(object.listener) : undefined,
      networkFilter: isSet(object.networkFilter)
        ? ProxyTemplate_Modifications_NetworkFilter.fromJSON(object.networkFilter)
        : undefined,
      httpFilter: isSet(object.httpFilter)
        ? ProxyTemplate_Modifications_HttpFilter.fromJSON(object.httpFilter)
        : undefined,
      virtualHost: isSet(object.virtualHost)
        ? ProxyTemplate_Modifications_VirtualHost.fromJSON(object.virtualHost)
        : undefined,
    };
  },

  toJSON(message: ProxyTemplate_Modifications): unknown {
    const obj: any = {};
    message.cluster !== undefined &&
      (obj.cluster = message.cluster ? ProxyTemplate_Modifications_Cluster.toJSON(message.cluster) : undefined);
    message.listener !== undefined &&
      (obj.listener = message.listener ? ProxyTemplate_Modifications_Listener.toJSON(message.listener) : undefined);
    message.networkFilter !== undefined && (obj.networkFilter = message.networkFilter
      ? ProxyTemplate_Modifications_NetworkFilter.toJSON(message.networkFilter)
      : undefined);
    message.httpFilter !== undefined && (obj.httpFilter = message.httpFilter
      ? ProxyTemplate_Modifications_HttpFilter.toJSON(message.httpFilter)
      : undefined);
    message.virtualHost !== undefined && (obj.virtualHost = message.virtualHost
      ? ProxyTemplate_Modifications_VirtualHost.toJSON(message.virtualHost)
      : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate_Modifications>): ProxyTemplate_Modifications {
    const message = Object.create(createBaseProxyTemplate_Modifications()) as ProxyTemplate_Modifications;
    message.cluster = (object.cluster !== undefined && object.cluster !== null)
      ? ProxyTemplate_Modifications_Cluster.fromPartial(object.cluster)
      : undefined;
    message.listener = (object.listener !== undefined && object.listener !== null)
      ? ProxyTemplate_Modifications_Listener.fromPartial(object.listener)
      : undefined;
    message.networkFilter = (object.networkFilter !== undefined && object.networkFilter !== null)
      ? ProxyTemplate_Modifications_NetworkFilter.fromPartial(object.networkFilter)
      : undefined;
    message.httpFilter = (object.httpFilter !== undefined && object.httpFilter !== null)
      ? ProxyTemplate_Modifications_HttpFilter.fromPartial(object.httpFilter)
      : undefined;
    message.virtualHost = (object.virtualHost !== undefined && object.virtualHost !== null)
      ? ProxyTemplate_Modifications_VirtualHost.fromPartial(object.virtualHost)
      : undefined;
    return message;
  },
};

function createBaseProxyTemplate_Modifications_Cluster(): ProxyTemplate_Modifications_Cluster {
  return { match: undefined, operation: "", value: "" };
}

export const ProxyTemplate_Modifications_Cluster = {
  fromJSON(object: any): ProxyTemplate_Modifications_Cluster {
    return {
      match: isSet(object.match) ? ProxyTemplate_Modifications_Cluster_Match.fromJSON(object.match) : undefined,
      operation: isSet(object.operation) ? String(object.operation) : "",
      value: isSet(object.value) ? String(object.value) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_Cluster): unknown {
    const obj: any = {};
    message.match !== undefined &&
      (obj.match = message.match ? ProxyTemplate_Modifications_Cluster_Match.toJSON(message.match) : undefined);
    message.operation !== undefined && (obj.operation = message.operation);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate_Modifications_Cluster>): ProxyTemplate_Modifications_Cluster {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_Cluster(),
    ) as ProxyTemplate_Modifications_Cluster;
    message.match = (object.match !== undefined && object.match !== null)
      ? ProxyTemplate_Modifications_Cluster_Match.fromPartial(object.match)
      : undefined;
    message.operation = object.operation ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_Cluster_Match(): ProxyTemplate_Modifications_Cluster_Match {
  return { origin: "", name: "" };
}

export const ProxyTemplate_Modifications_Cluster_Match = {
  fromJSON(object: any): ProxyTemplate_Modifications_Cluster_Match {
    return {
      origin: isSet(object.origin) ? String(object.origin) : "",
      name: isSet(object.name) ? String(object.name) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_Cluster_Match): unknown {
    const obj: any = {};
    message.origin !== undefined && (obj.origin = message.origin);
    message.name !== undefined && (obj.name = message.name);
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_Cluster_Match>,
  ): ProxyTemplate_Modifications_Cluster_Match {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_Cluster_Match(),
    ) as ProxyTemplate_Modifications_Cluster_Match;
    message.origin = object.origin ?? "";
    message.name = object.name ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_Listener(): ProxyTemplate_Modifications_Listener {
  return { match: undefined, operation: "", value: "" };
}

export const ProxyTemplate_Modifications_Listener = {
  fromJSON(object: any): ProxyTemplate_Modifications_Listener {
    return {
      match: isSet(object.match) ? ProxyTemplate_Modifications_Listener_Match.fromJSON(object.match) : undefined,
      operation: isSet(object.operation) ? String(object.operation) : "",
      value: isSet(object.value) ? String(object.value) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_Listener): unknown {
    const obj: any = {};
    message.match !== undefined &&
      (obj.match = message.match ? ProxyTemplate_Modifications_Listener_Match.toJSON(message.match) : undefined);
    message.operation !== undefined && (obj.operation = message.operation);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate_Modifications_Listener>): ProxyTemplate_Modifications_Listener {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_Listener(),
    ) as ProxyTemplate_Modifications_Listener;
    message.match = (object.match !== undefined && object.match !== null)
      ? ProxyTemplate_Modifications_Listener_Match.fromPartial(object.match)
      : undefined;
    message.operation = object.operation ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_Listener_Match(): ProxyTemplate_Modifications_Listener_Match {
  return { origin: "", name: "", tags: {} };
}

export const ProxyTemplate_Modifications_Listener_Match = {
  fromJSON(object: any): ProxyTemplate_Modifications_Listener_Match {
    return {
      origin: isSet(object.origin) ? String(object.origin) : "",
      name: isSet(object.name) ? String(object.name) : "",
      tags: isObject(object.tags)
        ? Object.entries(object.tags).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
    };
  },

  toJSON(message: ProxyTemplate_Modifications_Listener_Match): unknown {
    const obj: any = {};
    message.origin !== undefined && (obj.origin = message.origin);
    message.name !== undefined && (obj.name = message.name);
    obj.tags = {};
    if (message.tags) {
      Object.entries(message.tags).forEach(([k, v]) => {
        obj.tags[k] = v;
      });
    }
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_Listener_Match>,
  ): ProxyTemplate_Modifications_Listener_Match {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_Listener_Match(),
    ) as ProxyTemplate_Modifications_Listener_Match;
    message.origin = object.origin ?? "";
    message.name = object.name ?? "";
    message.tags = Object.entries(object.tags ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = String(value);
      }
      return acc;
    }, {});
    return message;
  },
};

function createBaseProxyTemplate_Modifications_Listener_Match_TagsEntry(): ProxyTemplate_Modifications_Listener_Match_TagsEntry {
  return { key: "", value: "" };
}

export const ProxyTemplate_Modifications_Listener_Match_TagsEntry = {
  fromJSON(object: any): ProxyTemplate_Modifications_Listener_Match_TagsEntry {
    return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
  },

  toJSON(message: ProxyTemplate_Modifications_Listener_Match_TagsEntry): unknown {
    const obj: any = {};
    message.key !== undefined && (obj.key = message.key);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_Listener_Match_TagsEntry>,
  ): ProxyTemplate_Modifications_Listener_Match_TagsEntry {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_Listener_Match_TagsEntry(),
    ) as ProxyTemplate_Modifications_Listener_Match_TagsEntry;
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_NetworkFilter(): ProxyTemplate_Modifications_NetworkFilter {
  return { match: undefined, operation: "", value: "" };
}

export const ProxyTemplate_Modifications_NetworkFilter = {
  fromJSON(object: any): ProxyTemplate_Modifications_NetworkFilter {
    return {
      match: isSet(object.match) ? ProxyTemplate_Modifications_NetworkFilter_Match.fromJSON(object.match) : undefined,
      operation: isSet(object.operation) ? String(object.operation) : "",
      value: isSet(object.value) ? String(object.value) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_NetworkFilter): unknown {
    const obj: any = {};
    message.match !== undefined &&
      (obj.match = message.match ? ProxyTemplate_Modifications_NetworkFilter_Match.toJSON(message.match) : undefined);
    message.operation !== undefined && (obj.operation = message.operation);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_NetworkFilter>,
  ): ProxyTemplate_Modifications_NetworkFilter {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_NetworkFilter(),
    ) as ProxyTemplate_Modifications_NetworkFilter;
    message.match = (object.match !== undefined && object.match !== null)
      ? ProxyTemplate_Modifications_NetworkFilter_Match.fromPartial(object.match)
      : undefined;
    message.operation = object.operation ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_NetworkFilter_Match(): ProxyTemplate_Modifications_NetworkFilter_Match {
  return { origin: "", name: "", listenerName: "", listenerTags: {} };
}

export const ProxyTemplate_Modifications_NetworkFilter_Match = {
  fromJSON(object: any): ProxyTemplate_Modifications_NetworkFilter_Match {
    return {
      origin: isSet(object.origin) ? String(object.origin) : "",
      name: isSet(object.name) ? String(object.name) : "",
      listenerName: isSet(object.listenerName) ? String(object.listenerName) : "",
      listenerTags: isObject(object.listenerTags)
        ? Object.entries(object.listenerTags).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
    };
  },

  toJSON(message: ProxyTemplate_Modifications_NetworkFilter_Match): unknown {
    const obj: any = {};
    message.origin !== undefined && (obj.origin = message.origin);
    message.name !== undefined && (obj.name = message.name);
    message.listenerName !== undefined && (obj.listenerName = message.listenerName);
    obj.listenerTags = {};
    if (message.listenerTags) {
      Object.entries(message.listenerTags).forEach(([k, v]) => {
        obj.listenerTags[k] = v;
      });
    }
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_NetworkFilter_Match>,
  ): ProxyTemplate_Modifications_NetworkFilter_Match {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_NetworkFilter_Match(),
    ) as ProxyTemplate_Modifications_NetworkFilter_Match;
    message.origin = object.origin ?? "";
    message.name = object.name ?? "";
    message.listenerName = object.listenerName ?? "";
    message.listenerTags = Object.entries(object.listenerTags ?? {}).reduce<{ [key: string]: string }>(
      (acc, [key, value]) => {
        if (value !== undefined) {
          acc[key] = String(value);
        }
        return acc;
      },
      {},
    );
    return message;
  },
};

function createBaseProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry(): ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry {
  return { key: "", value: "" };
}

export const ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry = {
  fromJSON(object: any): ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry {
    return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
  },

  toJSON(message: ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry): unknown {
    const obj: any = {};
    message.key !== undefined && (obj.key = message.key);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry>,
  ): ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry(),
    ) as ProxyTemplate_Modifications_NetworkFilter_Match_ListenerTagsEntry;
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_HttpFilter(): ProxyTemplate_Modifications_HttpFilter {
  return { match: undefined, operation: "", value: "" };
}

export const ProxyTemplate_Modifications_HttpFilter = {
  fromJSON(object: any): ProxyTemplate_Modifications_HttpFilter {
    return {
      match: isSet(object.match) ? ProxyTemplate_Modifications_HttpFilter_Match.fromJSON(object.match) : undefined,
      operation: isSet(object.operation) ? String(object.operation) : "",
      value: isSet(object.value) ? String(object.value) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_HttpFilter): unknown {
    const obj: any = {};
    message.match !== undefined &&
      (obj.match = message.match ? ProxyTemplate_Modifications_HttpFilter_Match.toJSON(message.match) : undefined);
    message.operation !== undefined && (obj.operation = message.operation);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate_Modifications_HttpFilter>): ProxyTemplate_Modifications_HttpFilter {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_HttpFilter(),
    ) as ProxyTemplate_Modifications_HttpFilter;
    message.match = (object.match !== undefined && object.match !== null)
      ? ProxyTemplate_Modifications_HttpFilter_Match.fromPartial(object.match)
      : undefined;
    message.operation = object.operation ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_HttpFilter_Match(): ProxyTemplate_Modifications_HttpFilter_Match {
  return { origin: "", name: "", listenerName: "", listenerTags: {} };
}

export const ProxyTemplate_Modifications_HttpFilter_Match = {
  fromJSON(object: any): ProxyTemplate_Modifications_HttpFilter_Match {
    return {
      origin: isSet(object.origin) ? String(object.origin) : "",
      name: isSet(object.name) ? String(object.name) : "",
      listenerName: isSet(object.listenerName) ? String(object.listenerName) : "",
      listenerTags: isObject(object.listenerTags)
        ? Object.entries(object.listenerTags).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
    };
  },

  toJSON(message: ProxyTemplate_Modifications_HttpFilter_Match): unknown {
    const obj: any = {};
    message.origin !== undefined && (obj.origin = message.origin);
    message.name !== undefined && (obj.name = message.name);
    message.listenerName !== undefined && (obj.listenerName = message.listenerName);
    obj.listenerTags = {};
    if (message.listenerTags) {
      Object.entries(message.listenerTags).forEach(([k, v]) => {
        obj.listenerTags[k] = v;
      });
    }
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_HttpFilter_Match>,
  ): ProxyTemplate_Modifications_HttpFilter_Match {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_HttpFilter_Match(),
    ) as ProxyTemplate_Modifications_HttpFilter_Match;
    message.origin = object.origin ?? "";
    message.name = object.name ?? "";
    message.listenerName = object.listenerName ?? "";
    message.listenerTags = Object.entries(object.listenerTags ?? {}).reduce<{ [key: string]: string }>(
      (acc, [key, value]) => {
        if (value !== undefined) {
          acc[key] = String(value);
        }
        return acc;
      },
      {},
    );
    return message;
  },
};

function createBaseProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry(): ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry {
  return { key: "", value: "" };
}

export const ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry = {
  fromJSON(object: any): ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry {
    return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
  },

  toJSON(message: ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry): unknown {
    const obj: any = {};
    message.key !== undefined && (obj.key = message.key);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry>,
  ): ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry(),
    ) as ProxyTemplate_Modifications_HttpFilter_Match_ListenerTagsEntry;
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_VirtualHost(): ProxyTemplate_Modifications_VirtualHost {
  return { match: undefined, operation: "", value: "" };
}

export const ProxyTemplate_Modifications_VirtualHost = {
  fromJSON(object: any): ProxyTemplate_Modifications_VirtualHost {
    return {
      match: isSet(object.match) ? ProxyTemplate_Modifications_VirtualHost_Match.fromJSON(object.match) : undefined,
      operation: isSet(object.operation) ? String(object.operation) : "",
      value: isSet(object.value) ? String(object.value) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_VirtualHost): unknown {
    const obj: any = {};
    message.match !== undefined &&
      (obj.match = message.match ? ProxyTemplate_Modifications_VirtualHost_Match.toJSON(message.match) : undefined);
    message.operation !== undefined && (obj.operation = message.operation);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplate_Modifications_VirtualHost>): ProxyTemplate_Modifications_VirtualHost {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_VirtualHost(),
    ) as ProxyTemplate_Modifications_VirtualHost;
    message.match = (object.match !== undefined && object.match !== null)
      ? ProxyTemplate_Modifications_VirtualHost_Match.fromPartial(object.match)
      : undefined;
    message.operation = object.operation ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplate_Modifications_VirtualHost_Match(): ProxyTemplate_Modifications_VirtualHost_Match {
  return { origin: "", name: "", routeConfigurationName: "" };
}

export const ProxyTemplate_Modifications_VirtualHost_Match = {
  fromJSON(object: any): ProxyTemplate_Modifications_VirtualHost_Match {
    return {
      origin: isSet(object.origin) ? String(object.origin) : "",
      name: isSet(object.name) ? String(object.name) : "",
      routeConfigurationName: isSet(object.routeConfigurationName) ? String(object.routeConfigurationName) : "",
    };
  },

  toJSON(message: ProxyTemplate_Modifications_VirtualHost_Match): unknown {
    const obj: any = {};
    message.origin !== undefined && (obj.origin = message.origin);
    message.name !== undefined && (obj.name = message.name);
    message.routeConfigurationName !== undefined && (obj.routeConfigurationName = message.routeConfigurationName);
    return obj;
  },

  fromPartial(
    object: DeepPartial<ProxyTemplate_Modifications_VirtualHost_Match>,
  ): ProxyTemplate_Modifications_VirtualHost_Match {
    const message = Object.create(
      createBaseProxyTemplate_Modifications_VirtualHost_Match(),
    ) as ProxyTemplate_Modifications_VirtualHost_Match;
    message.origin = object.origin ?? "";
    message.name = object.name ?? "";
    message.routeConfigurationName = object.routeConfigurationName ?? "";
    return message;
  },
};

function createBaseProxyTemplateSource(): ProxyTemplateSource {
  return { name: "" };
}

export const ProxyTemplateSource = {
  fromJSON(object: any): ProxyTemplateSource {
    return {
      name: isSet(object.name) ? String(object.name) : "",
      profile: isSet(object.profile) ? ProxyTemplateProfileSource.fromJSON(object.profile) : undefined,
      raw: isSet(object.raw) ? ProxyTemplateRawSource.fromJSON(object.raw) : undefined,
    };
  },

  toJSON(message: ProxyTemplateSource): unknown {
    const obj: any = {};
    message.name !== undefined && (obj.name = message.name);
    message.profile !== undefined &&
      (obj.profile = message.profile ? ProxyTemplateProfileSource.toJSON(message.profile) : undefined);
    message.raw !== undefined && (obj.raw = message.raw ? ProxyTemplateRawSource.toJSON(message.raw) : undefined);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplateSource>): ProxyTemplateSource {
    const message = Object.create(createBaseProxyTemplateSource()) as ProxyTemplateSource;
    message.name = object.name ?? "";
    message.profile = (object.profile !== undefined && object.profile !== null)
      ? ProxyTemplateProfileSource.fromPartial(object.profile)
      : undefined;
    message.raw = (object.raw !== undefined && object.raw !== null)
      ? ProxyTemplateRawSource.fromPartial(object.raw)
      : undefined;
    return message;
  },
};

function createBaseProxyTemplateProfileSource(): ProxyTemplateProfileSource {
  return { name: "", params: {} };
}

export const ProxyTemplateProfileSource = {
  fromJSON(object: any): ProxyTemplateProfileSource {
    return {
      name: isSet(object.name) ? String(object.name) : "",
      params: isObject(object.params)
        ? Object.entries(object.params).reduce<{ [key: string]: string }>((acc, [key, value]) => {
          acc[key] = String(value);
          return acc;
        }, {})
        : {},
    };
  },

  toJSON(message: ProxyTemplateProfileSource): unknown {
    const obj: any = {};
    message.name !== undefined && (obj.name = message.name);
    obj.params = {};
    if (message.params) {
      Object.entries(message.params).forEach(([k, v]) => {
        obj.params[k] = v;
      });
    }
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplateProfileSource>): ProxyTemplateProfileSource {
    const message = Object.create(createBaseProxyTemplateProfileSource()) as ProxyTemplateProfileSource;
    message.name = object.name ?? "";
    message.params = Object.entries(object.params ?? {}).reduce<{ [key: string]: string }>((acc, [key, value]) => {
      if (value !== undefined) {
        acc[key] = String(value);
      }
      return acc;
    }, {});
    return message;
  },
};

function createBaseProxyTemplateProfileSource_ParamsEntry(): ProxyTemplateProfileSource_ParamsEntry {
  return { key: "", value: "" };
}

export const ProxyTemplateProfileSource_ParamsEntry = {
  fromJSON(object: any): ProxyTemplateProfileSource_ParamsEntry {
    return { key: isSet(object.key) ? String(object.key) : "", value: isSet(object.value) ? String(object.value) : "" };
  },

  toJSON(message: ProxyTemplateProfileSource_ParamsEntry): unknown {
    const obj: any = {};
    message.key !== undefined && (obj.key = message.key);
    message.value !== undefined && (obj.value = message.value);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplateProfileSource_ParamsEntry>): ProxyTemplateProfileSource_ParamsEntry {
    const message = Object.create(
      createBaseProxyTemplateProfileSource_ParamsEntry(),
    ) as ProxyTemplateProfileSource_ParamsEntry;
    message.key = object.key ?? "";
    message.value = object.value ?? "";
    return message;
  },
};

function createBaseProxyTemplateRawSource(): ProxyTemplateRawSource {
  return { resources: [] };
}

export const ProxyTemplateRawSource = {
  fromJSON(object: any): ProxyTemplateRawSource {
    return {
      resources: Array.isArray(object?.resources)
        ? object.resources.map((e: any) => ProxyTemplateRawResource.fromJSON(e))
        : [],
    };
  },

  toJSON(message: ProxyTemplateRawSource): unknown {
    const obj: any = {};
    if (message.resources) {
      obj.resources = message.resources.map((e) => e ? ProxyTemplateRawResource.toJSON(e) : undefined);
    } else {
      obj.resources = [];
    }
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplateRawSource>): ProxyTemplateRawSource {
    const message = Object.create(createBaseProxyTemplateRawSource()) as ProxyTemplateRawSource;
    message.resources = object.resources?.map((e) => ProxyTemplateRawResource.fromPartial(e)) || [];
    return message;
  },
};

function createBaseProxyTemplateRawResource(): ProxyTemplateRawResource {
  return { name: "", version: "", resource: "" };
}

export const ProxyTemplateRawResource = {
  fromJSON(object: any): ProxyTemplateRawResource {
    return {
      name: isSet(object.name) ? String(object.name) : "",
      version: isSet(object.version) ? String(object.version) : "",
      resource: isSet(object.resource) ? String(object.resource) : "",
    };
  },

  toJSON(message: ProxyTemplateRawResource): unknown {
    const obj: any = {};
    message.name !== undefined && (obj.name = message.name);
    message.version !== undefined && (obj.version = message.version);
    message.resource !== undefined && (obj.resource = message.resource);
    return obj;
  },

  fromPartial(object: DeepPartial<ProxyTemplateRawResource>): ProxyTemplateRawResource {
    const message = Object.create(createBaseProxyTemplateRawResource()) as ProxyTemplateRawResource;
    message.name = object.name ?? "";
    message.version = object.version ?? "";
    message.resource = object.resource ?? "";
    return message;
  },
};

type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;

export type DeepPartial<T> = T extends Builtin ? T
  : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>>
  : T extends {} ? { [K in keyof T]?: DeepPartial<T[K]> }
  : Partial<T>;

function isObject(value: any): boolean {
  return typeof value === "object" && value !== null;
}

function isSet(value: any): boolean {
  return value !== null && value !== undefined;
}
