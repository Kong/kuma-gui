// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MtlsNotification.vue renders snapshot 1`] = `
<div>
  <div
    class="py-4"
  >
    <p
      class="mb-4"
    >
      
      Zero-trust security becomes even more critical as you transition to a microservice architecture.
      Microservices can be a chance to make your systems more secure than they were with monolithic applications.
      To do so, you use a zero-trust security model to encrypt traffic and reduce the risk of breaches,
      including mTLS and traffic permissions ACL to secure traffic paths from one service to another
    
    </p>
     
    <p
      class="mb-4"
    >
      
      Kuma is one service mesh that you can deploy once across any zone, cloud or cluster,
      including a Kubernetes cluster. Then, on top of this one service mesh implementation, you can create as many
      virtual service meshes as you wantâ€”each backed by its certificate authority.
    
    </p>
     
    <div
      class="mb-4"
    >
      <p
        class="mb-2"
      >
        
        This is the fastest and simplest way to enable mTLS in Kuma.
      
      </p>
       
      <p
        class="mb-2"
      >
        
        With a 
        <code
          class="inline"
        >
          builtin
        </code>
         CA backend type, Kuma will dynamically generate its own
        CA root certificate and key that it uses to automatically provision (and rotate) certificates for every replica
        of every service.
      
      </p>
       
      <p
        class="mb-2"
      >
        
        We can specify more than one 
        <code
          class="inline"
        >
          builtin
        </code>
         backend with different names, and each one of
        them will be automatically provisioned with a unique pair of certificate + key (they are not shared).
      
      </p>
       
      <p
        class="mb-2"
      >
        
        To enable a 
        <code
          class="inline"
        >
          builtin
        </code>
         mTLS for the entire Mesh we can apply the
        following configuration:
      
      </p>
       
      <div
        class="tab-container"
        data-testid="tab-container"
      >
        <!---->
         
        <div
          class="tab__content-container"
        >
          <div
            class="k-tabs"
            data-v-a38b664a=""
          >
            <ul
              aria-label="ktabs"
              data-v-a38b664a=""
              role="tablist"
            >
              <li
                aria-controls="panel-0"
                aria-selected="true"
                class="tab-item active"
                data-v-a38b664a=""
                id="universal-tab"
                role="tab"
                tabindex="0"
              >
                <a
                  class="tab-link"
                  data-v-a38b664a=""
                >
                  Universal
                </a>
              </li>
              <li
                aria-controls="panel-1"
                aria-selected="false"
                class="tab-item"
                data-v-a38b664a=""
                id="kubernetes-tab"
                role="tab"
                tabindex="0"
              >
                <a
                  class="tab-link"
                  data-v-a38b664a=""
                >
                  Kubernetes
                </a>
              </li>
            </ul>
            <div
              aria-labelledby="universal-tab"
              class="tab-container"
              data-v-a38b664a=""
              id="panel-0"
              role="tabpanel"
              tabindex="0"
            >
              <code
                class="block"
                data-v-a38b664a=""
              >
                <pre
                  data-v-a38b664a=""
                >
                  type: Mesh
name: default
mtls:
  enabledBackend: ca-1
  backends:
    - name: ca-1
      type: builtin
      dpCert:
        rotation:
          expiration: 1d
      conf:
        caCert:
          RSAbits: 2048
          expiration: 10y
                </pre>
              </code>
              
          We can apply the configuration with
          
              <code
                class="inline"
                data-v-a38b664a=""
              >
                kumactl apply -f [..]
              </code>
              .
        
            </div>
            <div
              aria-labelledby="kubernetes-tab"
              class="tab-container"
              data-v-a38b664a=""
              id="panel-1"
              role="tabpanel"
              tabindex="0"
            >
              <!---->
            </div>
          </div>
           
          <div>
            <!---->
             
            <!---->
          </div>
        </div>
      </div>
    </div>
     
    <a
      class="k-button outline-primary"
      data-v-38fa8ecf=""
      href="https://kuma.io/docs/1.2.0/policies/mutual-tls/"
      target="_blank"
      type="button"
    >
      
      Learn More
    
    </a>
  </div>
</div>
`;
