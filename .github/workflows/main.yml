# create-gui-pr.yaml is dependant on this name being "Tests"
name: 'Tests'
#
on:
  push:
    branches: [master, 'release-[0-9]+.[0-9]+']
  pull_request:
    types: [opened, reopened, synchronize]

permissions:
  contents: read # for checking out the repository (e.g. actions/checkout)

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    outputs:
      spec_groups: ${{ steps.set-groups.outputs.result }}
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        id: node-modules-cache
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
            ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - if: steps.node-modules-cache.outputs.cache-hit != 'true'
        run: |
          pnpm install --frozen-lockfile
      - id: set-groups
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          THREAD_COUNT: 4
        with:
          script: |
            const getPartitionedTestFiles = require('./scripts/getPartitionedTestFiles.cjs')

            return {
              'kuma-gui': getPartitionedTestFiles(process.env.THREAD_COUNT),
            }

  lint-tests:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
            ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - env:
          LINTER_MODE: strict
        run: |
          pnpm lint
          pnpm lint:ts
          pnpm lint:styles

  cli-tests:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
            ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - run: |
          pnpm test

  browser-tests:
    needs: [install-dependencies]
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        package: ['kuma-gui']
        container: [0, 1, 2, 3]
    steps:
      - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
      - uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # v4.0.2
        with:
          node-version-file: '.nvmrc'
      - uses: pnpm/action-setup@a3252b78c470c02df07e9d59298aecedc3ccdd6d # v3.0.0
      - run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV
      - uses: actions/cache/restore@0c45773b623bea8c8e75f6c82b208c3cf94ea4f9 # v4.0.2
        with:
          path: |
            **/node_modules
            /home/runner/.cache/Cypress
            ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/pnpm-lock.yaml') }}
      - run: |
          pnpm build:staging
      - env:
          SPEC_GROUPS: ${{ needs.install-dependencies.outputs.spec_groups }}
        run: |
          pnpm preview:built &
          CYPRESS_video=true pnpm test:browser --spec $(echo $SPEC_GROUPS | jq -cMr '.["${{ matrix.package }}"]' | jq -cMr '.[${{ matrix.container }}]')
      - uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
        if: failure()
        with:
          name: cypress-artifacts-${{ matrix.package }}-${{ matrix.container }}
          retention-days: ${{ github.event_name == 'pull_request' && 3 || 30 }}
          path: |
            cypress/screenshots
            cypress/videos

  post-checks:
    # There is a branch protection rule on the repo that requires "branch-protection" to
    # be successful
    name: branch-protection
    #
    needs:
      - lint-tests
      - cli-tests
      - browser-tests
    runs-on: ubuntu-latest
    if: |
      always()
    steps:
      - name: Check for failures
        if: |
          contains(needs.*.result, 'failure') ||
          contains(needs.*.result, 'cancelled')
        run: echo '${{toJSON(needs)}}' && exit 1

      - run: echo "Successful"
